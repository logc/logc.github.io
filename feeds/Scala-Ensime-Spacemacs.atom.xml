<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">logc io: Posts tagged 'Scala Ensime Spacemacs'</title>
 <link rel="self" href="http://logc.github.io/feeds/Scala-Ensime-Spacemacs.atom.xml" />
 <link href="http://logc.github.io/tags/Scala-Ensime-Spacemacs.html" />
 <id>urn:http-logc-github-io:-tags-Scala-Ensime-Spacemacs-html</id>
 <updated>2018-08-09T12:10:00Z</updated>
 <entry>
  <title type="text">Ensime server crashed by wrong JAR</title>
  <link rel="alternate" href="http://logc.github.io/blog/2018/08/09/ensime-server-crashed-by-wrong-jar/?utm_source=Scala-Ensime-Spacemacs&amp;utm_medium=Atom" />
  <id>urn:http-logc-github-io:-blog-2018-08-09-ensime-server-crashed-by-wrong-jar</id>
  <published>2018-08-09T12:10:00Z</published>
  <updated>2018-08-09T12:10:00Z</updated>
  <author>
   <name>logc</name></author>
  <content type="html">
&lt;p&gt;If you have a dodgy source jar file, it will probably blow up the ensime server with java.util.zip.ZipException: error in opening zip file. The solution offered in &lt;a href="https://github.com/ensime/ensime-server/issues/825"&gt;the project&amp;rsquo;s Github issue&lt;/a&gt; is to delete your local copy of the bad file and add it to the list of excluded classifiers in ivy (i.e. &lt;code&gt;~/.ivy2/exclude_classifiers&lt;/code&gt;), and report the file to the nexus hosts to have it deleted.&lt;/p&gt;

&lt;p&gt;Mine is a bit longer &amp;hellip;&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;I struggled with this error for weeks! In my case, the offending JAR was a transitive dependency of a project, and the solution offered here was not clear enough for me.&lt;/p&gt;

&lt;p&gt;This problem is tricky if you previously loaded the project into an IDE: they download by default all transitive dependencies with sources and javadoc, and the ivy cache is shared by all projects in the same machine.&lt;/p&gt;

&lt;p&gt;Here is my solution, in case it helps others:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;determine which dependency is pulling the problem JAR with the &lt;a href="https://github.com/jrudolph/sbt-dependency-graph"&gt;sbt dependency  graph plugin&lt;/a&gt; (note: the  command &lt;code&gt;whatDependsOn&lt;/code&gt; only works in interactive mode)&lt;/li&gt;
 &lt;li&gt;move away the current ivy cache folder &lt;code&gt;console
$ mv ~/.ivy2/ ~/.ivy2_old&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;(optional) create a new clone to have a known state &lt;code&gt;console
$ git clone $repo ~/dev/ensime-$repo&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;edit &lt;code&gt;build.sbt&lt;/code&gt; to add an exclusion rule for the transitive dependency at the line of the explicit dependency that needs it, e.g. &lt;code&gt;sbt
libraryDependencies ++= Seq(
  "com.company.notifications" % "notifications-schema" exclude("org.json", "json")
)&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;compile, go for a coffee while ivy downloads the internet :smile:, then run ensime commands &lt;code&gt;console
$ sbt compile
$ sbt ensimeConfig ensimeConfigProject&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</content></entry></feed>