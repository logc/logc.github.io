<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">logc io: Posts tagged 'sysadmin'</title>
 <link rel="self" href="http://logc.github.io/feeds/sysadmin.atom.xml" />
 <link href="http://logc.github.io/tags/sysadmin.html" />
 <id>urn:http-logc-github-io:-tags-sysadmin-html</id>
 <updated>2013-11-17T21:43:12Z</updated>
 <entry>
  <title type="text">Infraestructura de lanzamientos locales</title>
  <link rel="alternate" href="http://logc.github.io/blog/2013/11/17/infraestructura-de-lanzamientos-locales?utm_source=sysadmin&amp;utm_medium=Atom" />
  <id>urn:http-logc-github-io:-blog-2013-11-17-infraestructura-de-lanzamientos-locales</id>
  <published>2013-11-17T21:43:12Z</published>
  <updated>2013-11-17T21:43:12Z</updated>
  <author>
   <name>logc</name></author>
  <content type="html">
&lt;p&gt;Este post describe cómo crear una infraestructura de lanzamientos locales, para compartir paquetes locales con otros desarrolladores del mismo equipo, basándose en Python y Macports. Esto presupone que los otros miembros del equipo usan todos Mac OS X, y que están interesados en usar paquetes de Python, claro.&lt;/p&gt;

&lt;p&gt;Necesitaremos:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;crear un paquete de Python con su correspondiente &lt;code&gt;setup.py&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;tener un directorio &lt;code&gt;releases&lt;/code&gt; servido por HTTP por el servidor Apache  integrado en el sistema operativo.&lt;/li&gt;
 &lt;li&gt;tener un directorio &lt;code&gt;ports&lt;/code&gt; servido por rsync.&lt;/li&gt;
 &lt;li&gt;configurar Macports para usar este nuevo repositorio.&lt;/li&gt;&lt;/ul&gt;
&lt;!-- more--&gt;

&lt;h2 id="crear-un-paquete-de-ejemplo-en-python"&gt;Crear un paquete de ejemplo en Python&lt;/h2&gt;

&lt;p&gt;Crea un directorio llamado &lt;code&gt;pyhello&lt;/code&gt;, y los siguientes directorios y ficheros dentro de él:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;.
├── pyhello
│   ├── __init__.py
│   └── main.py
└── setup.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El contenido de &lt;code&gt;setup.py&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: python"&gt;
 &lt;pre&gt;&lt;code&gt;from setuptools import setup

setup(name='pyhello',
      version='0.1',
      packages=['pyhello'],
      entry_points={
          'console_scripts': ['pyhello=pyhello.main:main']})&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El contenido de &lt;code&gt;pyhello/main.py&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: python"&gt;
 &lt;pre&gt;&lt;code&gt;def main():
    print "Hello from pyhello!"&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Después crea una distribución de fuentes con el comando estándar:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;python setup.py sdist&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto crea un lanzamiento llamado &lt;code&gt;pyhello-0.1.tar.gz&lt;/code&gt; bajo el directorio &lt;code&gt;dist&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="servir-lanzamientos-por-http"&gt;Servir lanzamientos por HTTP&lt;/h2&gt;

&lt;p&gt;Crea un directorio &lt;code&gt;releases&lt;/code&gt; bajo &lt;code&gt;~/Sites&lt;/code&gt;. Copia el fichero &lt;code&gt;dist/pyhello-0.1.tar.gz&lt;/code&gt; allá.&lt;/p&gt;

&lt;p&gt;Crea un fichero de configuración para Apache en &lt;code&gt;/etc/apache2/users/YOUR_USERNAME.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;El contenido de &lt;code&gt;YOUR_USERNAME.conf&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: apacheconf"&gt;
 &lt;pre&gt;&lt;code&gt;&amp;lt;Directory "/Users/YOUR_USERNAME/Sites/"&amp;gt;
    Options Indexes Multiviews
    AllowOverride AuthConfig Limit
    Order allow,deny
    Allow from all
&amp;lt;/Directory&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para lanzar Apache sólo durante esta sesión de la máquina:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ sudo apachectl start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para lanzar Apache automáticamente cada vez que se inicia la máquina:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ sudo launchctl load -w /System/Library/LaunchDaemons/org.apache.httpd.plist&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="crear-un-fichero-portfile"&gt;Crear un fichero Portfile&lt;/h2&gt;

&lt;p&gt;El contenido de un fichero Portfile para un proyecto de Python normal (basado en un &lt;code&gt;setup.py&lt;/code&gt;) es:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- coding: utf-8; mode: tcl; tab-width: 4; truncate-lines: t; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0
PortGroup python 1.0

name                py-pyhello
version             0.1

categories-append   devel
license             BSD
maintainers         your.mail.provider.com:your.mail.name
description         An example Python app
long_description    Pyhello is an example Python app, distributed over \
                    local Macports

platforms           darwin
supported_archs     noarch

homepage            http://your.local.machine/~YOUR_USERNAME/
master_sites        http://your.local.machine/~YOUR_USERNAME/releases/
distname            pyhello-${version}

python.versions     26 27

checksums           rmd160 b8a9e7e5db29d407db95310ee95e7048d6fa1cdd \
                    sha256 cd8693792f5e6632c0c7efd287b5153571173cc3a26f98c2cead7af6a0445b2b&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Aclaraciones&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;code&gt;PortGroup&lt;/code&gt; para python configura los comandos de &lt;code&gt;build&lt;/code&gt; e &lt;code&gt;install&lt;/code&gt;;  también existen grupos para &lt;code&gt;haskell&lt;/code&gt; y otros.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;el nombre del paquete es manipulado para generar un paquete por cada versión  listada en &lt;code&gt;python.versions&lt;/code&gt;. En este ejemplo, se generarían &lt;code&gt;py26-pyhello&lt;/code&gt; y  &lt;code&gt;py27-pyhello&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;la convención para el campo &lt;code&gt;maintainers&lt;/code&gt; es &lt;code&gt;gmail.com:user&lt;/code&gt; para  &lt;code&gt;user@gmail.com&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;para generar los digests del lanzamiento con los siguientes comandos:&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ openssl sha256 dist/pyhello-0.1.tar.gz
$ openssl rmd160 dist/pyhello-0.1.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="servir-portfiles-por-rsync"&gt;Servir Portfiles por rsync&lt;/h2&gt;

&lt;p&gt;Crea un directorio &lt;code&gt;ports&lt;/code&gt; bajo &lt;code&gt;~/Sites&lt;/code&gt;, y los siguentes subdirectorios en él:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;.
└── python
    └── pyhello
        └── Portfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Copia el fichero Portfile a su ubicación mostrada y ejecuta el siguiente comando en el directorio &lt;code&gt;ports&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ portindex
Creating port index in ...
Adding port python/pyhello
Adding subport py26-pyhello
Adding subport py27-pyhello

Total number of ports parsed:	3
Ports successfully parsed:	3
Ports failed:			0
Up-to-date ports skipped:	0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aunque rsync viene instalado por defecto, usaremos la versión instalada con Macports en lo siguiente. La versión por defecto está en &lt;code&gt;/usr/bin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Crear un fichero para &lt;code&gt;launchctl&lt;/code&gt; en &lt;code&gt;/Library/LaunchDaemons/name.YOUR_USERNAME.rsync.plist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;El contenido de &lt;code&gt;rsync.plit&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: xml"&gt;
 &lt;pre&gt;&lt;code&gt; &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
 &amp;lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&amp;gt;
 &amp;lt;plist version="1.0"&amp;gt;
 &amp;lt;dict&amp;gt;
        &amp;lt;key&amp;gt;Disabled&amp;lt;/key&amp;gt;
        &amp;lt;false/&amp;gt;
        &amp;lt;key&amp;gt;Label&amp;lt;/key&amp;gt;
        &amp;lt;string&amp;gt;name.YOUR_USERNAME.rsync&amp;lt;/string&amp;gt;
        &amp;lt;key&amp;gt;Program&amp;lt;/key&amp;gt;
        &amp;lt;string&amp;gt;/opt/local/bin/rsync&amp;lt;/string&amp;gt;
        &amp;lt;key&amp;gt;ProgramArguments&amp;lt;/key&amp;gt;
        &amp;lt;array&amp;gt;
                &amp;lt;string&amp;gt;/opt/local/bin/rsync&amp;lt;/string&amp;gt;
                &amp;lt;string&amp;gt;--daemon&amp;lt;/string&amp;gt;
                &amp;lt;string&amp;gt;--config=/opt/local/etc/rsyncd.conf&amp;lt;/string&amp;gt;
        &amp;lt;/array&amp;gt;
        &amp;lt;key&amp;gt;inetdCompatibility&amp;lt;/key&amp;gt;
        &amp;lt;dict&amp;gt;
                &amp;lt;key&amp;gt;Wait&amp;lt;/key&amp;gt;
                &amp;lt;false/&amp;gt;
        &amp;lt;/dict&amp;gt;
        &amp;lt;key&amp;gt;Sockets&amp;lt;/key&amp;gt;
        &amp;lt;dict&amp;gt;
            &amp;lt;key&amp;gt;Listeners&amp;lt;/key&amp;gt;
            &amp;lt;dict&amp;gt;
                &amp;lt;key&amp;gt;SockServiceName&amp;lt;/key&amp;gt;
                &amp;lt;string&amp;gt;rsync&amp;lt;/string&amp;gt;
                &amp;lt;key&amp;gt;SockType&amp;lt;/key&amp;gt;
                &amp;lt;string&amp;gt;stream&amp;lt;/string&amp;gt;
            &amp;lt;/dict&amp;gt;
        &amp;lt;/dict&amp;gt;
 &amp;lt;/dict&amp;gt;
 &amp;lt;/plist&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El contenido de &lt;code&gt;/opt/local/etc/rsyncd.conf&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: ini"&gt;
 &lt;pre&gt;&lt;code&gt;[ports]

path=/Users/YOUR_USERNAME/Sites/ports
log file=/opt/local/var/log/rsyncd.log
pid file=/opt/local/var/run/rsyncd.pid
read only=true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Añadir rsync a &lt;code&gt;launchctl&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ sudo launchctl load -w /Library/LaunchDaemons/name.YOUR_USERNAME.rsync.plist&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comprueba que sólo se pueden listar los ports y nada más del sistema de fichero:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ rsync -axv rsync://localhost/
$ rsync -axv rsync://localhost/ports/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="configurar-macports"&gt;Configurar Macports&lt;/h2&gt;

&lt;p&gt;Configura Macports en todas las máquinas que deban poder acceder a los nuevos paquetes. El nuevo repositorio debe ir antes del repositorio por defecto para evitar conflictos de nombres.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rsync://localhost/ports/
rsync://rsync.macports.org/release/ports/ [default]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comprueba desde otras máquinas que se pueden encontrar los nuevos paquetes:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ port search pyhello
py-pyhello @0.1 (python, devel)
    An example Python app

py26-pyhello @0.1 (python, devel)
    An example Python app

py27-pyhello @0.1 (python, devel)
    An example Python app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Después de instalar el nuevo paquete, sus comandos están a nuestra disposición:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;pre&gt;&lt;code&gt;$ sudo port install py27-pyhello
$ pyhello
Hello from pyhello!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content></entry></feed>