<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>logc io: Posts tagged 'Scala'</title>
  <description>logc io: Posts tagged 'Scala'</description>
  <link>http://logc.github.io/tags/Scala.html</link>
  <lastBuildDate>Tue, 05 Sep 2017 13:47:32 UT</lastBuildDate>
  <pubDate>Tue, 05 Sep 2017 13:47:32 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Ensime server crash because of transitive dependency</title>
   <link>http://logc.github.io/blog/2017/09/05/ensime-server-crash-because-of-transitive-dependency/?utm_source=Scala&amp;utm_medium=RSS</link>
   <guid isPermaLink="false">urn:http-logc-github-io:-blog-2017-09-05-ensime-server-crash-because-of-transitive-dependency</guid>
   <pubDate>Tue, 05 Sep 2017 13:47:32 UT</pubDate>
   <author>logc</author>
   <description>
&lt;p&gt;The Scala layer for Spacemacs uses Ensime by default. There is an error that made me struggle for weeks: &lt;a href="https://github.com/ensime/ensime-server/issues/825"&gt;Bad source jar kills the server: ZipException: error in opening zip file&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The offending JAR was a transitive dependency of a project, and the solution offered on the issue was not clear for me.&lt;/p&gt;

&lt;p&gt;This problem is tricky if you previously loaded the project into an IDE: they download by default all transitive dependencies with sources and javadoc, and the ivy cache is shared by all projects in the same machine.&lt;/p&gt;

&lt;p&gt;Here is my solution, as found also on the issue, in case it helps others:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;determine which dependency is pulling the problem JAR with the &lt;a href="https://github.com/jrudolph/sbt-dependency-graph"&gt;sbt dependency  graph plugin&lt;/a&gt; (note: the  command &lt;code&gt;whatDependsOn&lt;/code&gt; only works in interactive mode)&lt;/li&gt;
 &lt;li&gt;move away the current ivy cache folder &lt;code&gt;console
$ mv ~/.ivy2/ ~/.ivy2_old&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;(optional) create a new clone to have a known state &lt;code&gt;console
$ git clone $repo ~/dev/ensime-$repo&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;edit &lt;code&gt;build.sbt&lt;/code&gt; to add an exclusion rule for the transitive dependency at the  line of the explicit dependency that needs it, e.g. &lt;code&gt;sbt
libraryDependencies ++= Seq(
  "com.company.notifications" % "notifications-schema" exclude("org.json", "json")
)&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;compile, go for a coffee while ivy downloads the internet :), then run ensime commands &lt;code&gt;console
$ sbt compile
$ sbt ensimeConfig ensimeConfigProject&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</description></item></channel></rss>